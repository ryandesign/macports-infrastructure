server {
    listen 80;
    listen [::]:80;

    server_name build.macports.org;
    server_name_in_redirect on;
    access_log @PREFIX@/var/log/nginx/build-access.log main;
    error_log @PREFIX@/var/log/nginx/build-error.log;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate @PREFIX@/etc/letsencrypt/live/build.macports.org/fullchain.pem;
    ssl_certificate_key @PREFIX@/etc/letsencrypt/live/build.macports.org/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:buildbot_SSL:1440m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # openssl dhparam -out dhparam.pem 2048
    ssl_dhparam @PREFIX@/etc/nginx/ssl/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate @PREFIX@/etc/nginx/ssl/globalsign_intermediate_and_root.pem;

    #resolver <IP DNS resolver>;

    server_name build.macports.org build;
    server_name_in_redirect on;
    access_log @PREFIX@/var/log/nginx/build-access.log main;
    error_log @PREFIX@/var/log/nginx/build-error.log;

    location / {
        proxy_pass http://localhost:8010/;
        proxy_connect_timeout 75s;
        proxy_read_timeout 900s;
        proxy_send_timeout 900s;
    }
    location /sse/ {
        # proxy buffering will prevent sse to work
        proxy_buffering off;
        proxy_pass http://localhost:8010/sse/;
    }
    # required for websocket
    location /ws {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_pass http://localhost:8010/ws;
          # raise the proxy timeout for the websocket
          proxy_read_timeout 6000s;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name build.internal.macports.net build;
    server_name_in_redirect on;
    access_log @PREFIX@/var/log/nginx/build-access.log main;
    error_log @PREFIX@/var/log/nginx/build-error.log;

    location / {
        proxy_pass http://localhost:8010/;
        proxy_connect_timeout 75s;
        proxy_read_timeout 900s;
        proxy_send_timeout 900s;
    }
    location /sse/ {
        # proxy buffering will prevent sse to work
        proxy_buffering off;
        proxy_pass http://localhost:8010/sse/;
    }
    # required for websocket
    location /ws {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_pass http://localhost:8010/ws;
          # raise the proxy timeout for the websocket
          proxy_read_timeout 6000s;
    }
}
