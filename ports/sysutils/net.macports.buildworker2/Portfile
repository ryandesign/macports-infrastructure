# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           net.macports 1.0

name                net.macports.buildworker2
version             10
revision            0

distfiles

depends_run         port:buildbot-worker

add_users           buildbot group=buildbot realname=buildbot

set hostname        [lindex [split [info hostname] .] 0]
append worker_id    ${os.platform}_${os.major}_${build_arch}
set cxx_lib         libc++

if {${os.platform} eq "darwin" && ${os.major} < 13} {
    variant legacy description {Use libstdc++ instead of libc++} {}
    if {[string match {*-legacy*} ${hostname}]} {
        default_variants +legacy
    }
    if {[variant_isset legacy]} {
        append worker_id _legacy
        set cxx_lib     libstdc++
    }
}

proc random_password {} {
    set len 32
    set chars {0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz}
    set range [string length ${chars}]
    set password {}
    while {${len} > 0} {
       append password [string index ${chars} [expr {int(rand() * ${range})}]]
       incr len -1
    }
    return ${password}
}

set password_base   [random_password]

variant base description {Use a base worker} {
    post-destroot {
        xinstall -d -o buildbot -g buildbot \
            ${destroot}${prefix}/var/buildworker2/base/info
        xinstall -m 0644 -o buildbot -g buildbot ${filespath}/admin \
            ${destroot}${prefix}/var/buildworker2/base/info

        xinstall -m 0644 ${filespath}/${name}.base.plist.in ${destroot}/Library/${startupitem.location}/${name}.base.plist
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}/Library/${startupitem.location}/${name}.base.plist
    }

    post-deactivate {
        delete ${prefix}/var/buildworker2/base/info/host
    }
}

if {!([variant_exists legacy] && [variant_isset legacy])} {
    default_variants +base
}

if {[variant_isset base]} {
    append notes_create "
sudo -H -u buildbot ${prefix}/bin/buildbot-worker\
    create-worker --umask 0o022\
    ${prefix}/var/buildworker2/base\
    build2:9989\
    base-${worker_id}\
    ${password_base}"
    append notes_upgrade "
sudo -H -u buildbot ${prefix}/bin/buildbot-worker\
    upgrade-worker\
    ${prefix}/var/buildworker2/base"
    append notes_workers "
base-${worker_id}: '${password_base}'"
    append notes_load "
sudo launchctl load -w /Library/${startupitem.location}/${name}.base.plist"
    append notes_unload "
sudo launchctl unload -w /Library/${startupitem.location}/${name}.base.plist"
}

set password_ports  [random_password]

variant ports description {Use a ports worker} {
    post-destroot {
        xinstall -d -o buildbot -g buildbot \
            ${destroot}${prefix}/var/buildworker2/ports/info
        xinstall -m 0644 -o buildbot -g buildbot ${filespath}/admin \
            ${destroot}${prefix}/var/buildworker2/ports/info

        xinstall -m 0644 ${filespath}/${name}.ports.plist.in ${destroot}/Library/${startupitem.location}/${name}.ports.plist
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}/Library/${startupitem.location}/${name}.ports.plist
    }

    post-deactivate {
        delete ${prefix}/var/buildworker2/ports/info/host
    }
}

default_variants +ports

if {[variant_isset ports]} {
    # mpbb checkout sets binpath to use this
    depends_run-append  port:libarchive

    append notes_create "
sudo -H ${prefix}/bin/buildbot-worker\
    create-worker --umask 0o022\
    ${prefix}/var/buildworker2/ports\
    build2:9989\
    ports-${worker_id}\
    ${password_ports}"
    append notes_upgrade "
sudo -H ${prefix}/bin/buildbot-worker\
    upgrade-worker\
    ${prefix}/var/buildworker2/ports"
    append notes_workers "
ports-${worker_id}: '${password_ports}'"
    append notes_load "
sudo launchctl load -w /Library/${startupitem.location}/${name}.ports.plist"
    append notes_unload "
sudo launchctl unload -w /Library/${startupitem.location}/${name}.ports.plist"
}

if {[variant_isset base] || [variant_isset ports]} {
    # mpbb gather-archives
    depends_run-append  port:curl
    # mpbb parseopt
    depends_run-append  port:util-linux
    # mpbb checkout
    depends_run-append  port:git
    # mpbb compute_failcache_hash
    depends_run-append  port:openssl
}

set password_jobs   [random_password]

variant jobs description {Use a jobs worker} {
    # mpbb parseopt
    depends_run-append  port:util-linux
    # jobs-guide
    depends_run-append  port:asciidoctor port:docbook-xml port:docbook-xsl-ns
    # jobs-man
    depends_run-append  port:asciidoc port:libxslt port:docbook-xsl-nons

    post-destroot {
        xinstall -d -o buildbot -g buildbot \
            ${destroot}${prefix}/var/buildworker2/jobs/info
        xinstall -m 0644 -o buildbot -g buildbot ${filespath}/admin \
            ${destroot}${prefix}/var/buildworker2/jobs/info

        xinstall -m 0644 ${filespath}/${name}.jobs.plist.in ${destroot}/Library/${startupitem.location}/${name}.jobs.plist
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}/Library/${startupitem.location}/${name}.jobs.plist
    }

    post-deactivate {
        delete ${prefix}/var/buildworker2/jobs/info/host
    }
}

if {[variant_isset jobs]} {
    append notes_create "
sudo -H -u buildbot ${prefix}/bin/buildbot-worker\
    create-worker --umask 0o022\
    ${prefix}/var/buildworker2/jobs\
    build2:9989\
    jobs\
    ${password_jobs}"
    append notes_upgrade "
sudo -H -u buildbot ${prefix}/bin/buildbot-worker\
    upgrade-worker\
    ${prefix}/var/buildworker2/jobs"
    append notes_workers "
jobs: '${password_jobs}'"
    append notes_load "
sudo launchctl load -w /Library/${startupitem.location}/${name}.jobs.plist"
    append notes_unload "
sudo launchctl unload -w /Library/${startupitem.location}/${name}.jobs.plist"
}

destroot {
    xinstall -d ${destroot}${prefix}/share/buildworker2

    xinstall ${filespath}/host.sh.in ${destroot}${prefix}/share/buildworker2/host.sh
    xinstall ${filespath}/run.sh.in ${destroot}${prefix}/share/buildworker2/run.sh
    reinplace "s|@ARCH@|${build_arch}|g" ${destroot}${prefix}/share/buildworker2/host.sh
    reinplace "s|@CXX_LIB@|${cxx_lib}|g" ${destroot}${prefix}/share/buildworker2/host.sh
    reinplace "s|@PREFIX@|${prefix}|g" ${destroot}${prefix}/share/buildworker2/run.sh
}

notes "
To create the buildworkers, run:
${notes_create}

To upgrade the buildworkers for a new version of buildbot, run:
${notes_upgrade}

Add these lines to workers.yml on buildmaster:
${notes_workers}

To start the buildworkers, run:
${notes_load}

To stop the buildworkers, run:
${notes_unload}
"
